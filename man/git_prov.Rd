% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/git_prov.R
\name{git_prov}
\alias{git_prov}
\title{Access git provenance information}
\usage{
git_prov(filename, filetype = c("input", "output", "parent_script",
  "sourced_script")[1], nogit = FALSE, nolog = FALSE)
}
\arguments{
\item{filename}{A valid file name (relative or absolute) or vector of file names}

\item{filetype}{The role of this file within this context: 'input',
'output', 'parent_script', or 'sourced_script'.  Defaults to 'input'.}

\item{nolog}{Should this git provenance information be omitted from
the log file? Defaults to FALSE.}
}
\description{
This function takes a filename and reads its git log, strips to its
most recent commit, and returns a dataframe with git provenance
information.
If a prov log exists (and \code{nolog} is FALSE), this information is
added to the log.
}
\examples{
git_prov('raw_data.csv', filetype = 'input')
git_prov('raw_data.csv', filetype = 'input', nogit = TRUE)
  ### will skip provenance tracking for this file
git_prov('raw_data.csv', filetype = 'input', nolog = TRUE)
  ### will gather git commit info for this file, but will not add to the
  ### git tracking data frame.  This can be useful if you just want to
  ### peek at the commit info.
}

